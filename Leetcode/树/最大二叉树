/*

给定一个不重复的整数数组 nums 。 最大二叉树 可以用下面的算法从 nums 递归地构建:

创建一个根节点，其值为 nums 中的最大值。 递归地在最大值 左边 的 子数组前缀上 构建左子树。 递归地在最大值 右边 的 子数组后缀上 构建右子树。 返回 nums 构建的 最大二叉树 。
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


struct TreeNode* constructMaximumBinaryTree(int* nums, int numsSize){
    if(numsSize==0)return NULL;
    int maxi=0,max=0;
    for(int i=0;i<numsSize;++i)if(nums[i]>max){max=nums[i];maxi=i;}
    struct TreeNode *root=(struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->val=max;
    root->left=constructMaximumBinaryTree(nums,maxi);
    root->right=constructMaximumBinaryTree(nums+maxi+1,numsSize-maxi-1);
    return root;
}

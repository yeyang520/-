/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    int count=0,maxcount=0;
    struct TreeNode*pre=NULL;
    vector<int>result;
    void traverse(struct TreeNode*root){
        if(!root)return ;
        traverse(root->left);//左

        //对数据的处理
        //判断与前一个数的关系
        if(pre==NULL)count=1;
        else if(pre->val==root->val)count++;
        else count=1;
        pre=root;

        //判断该数出现的次数
        if(maxcount==count){
            result.push_back(root->val);
        }
        else if(maxcount<count){
            maxcount=count;
            result.clear();
            result.push_back(root->val);
        }

        traverse(root->right);//右
    }
public:
    vector<int> findMode(TreeNode* root) {
        traverse(root);
        return result;
    }
};

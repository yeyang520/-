/*
    dp[i]代表第i个数的最大乘积
    dp[i]=max(dp[i],max((i-j)*j,dp[i-1]*j))
    (i-j)*j是两个数相乘 dp[i-j]*j两个及以上

*/


class Solution {
public:
    int integerBreak(int n) {
        vector<int> dp(n+1,0);
        dp[2]=1;
        for(int i=3;i<=n;++i)
        {
            for(int j=1;j<i;++j)
            {
                //加入dp[i]是每次都更新dp[i]
                dp[i]=max(dp[i],max( (i-j)*j,dp[i-j]*j) );
            }
        }
        return dp[n];
    }
};
